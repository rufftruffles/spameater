# SpamEater Custom Security Rules - Enhanced Version

# Rule 1000: Allow DELETE requests to SpamEater API
SecRule REQUEST_METHOD "@streq DELETE" \
    "id:1000,\
    phase:1,\
    pass,\
    nolog,\
    ctl:ruleRemoveByTag=method-enforcement,\
    chain"
SecRule REQUEST_URI "@beginsWith /api/"

# Rule 1001: Block invalid email prefixes in API calls
SecRule REQUEST_URI "@rx /api/inbox/([^a-zA-Z0-9._-]+)\.json" \
    "id:1001,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Invalid inbox name pattern',\
    logdata:'Suspicious inbox: %{MATCHED_VAR}',\
    severity:'CRITICAL'"

# Rule 1002: Block SQL injection attempts
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_BODY|REQUEST_HEADERS|XML:/*|XML://@* \
    "@detectSQLi" \
    "id:1002,\
    phase:2,\
    deny,\
    status:403,\
    msg:'SQL Injection Attack Detected',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    severity:'CRITICAL'"

# Rule 1003: Block XSS attempts
SecRule ARGS|ARGS_NAMES|REQUEST_COOKIES|REQUEST_COOKIES_NAMES|REQUEST_BODY|REQUEST_HEADERS \
    "@detectXSS" \
    "id:1003,\
    phase:2,\
    deny,\
    status:403,\
    msg:'XSS Attack Detected',\
    logdata:'Matched Data: %{MATCHED_VAR} found within %{MATCHED_VAR_NAME}',\
    severity:'CRITICAL'"

# Rule 1004: Block path traversal attempts - Basic
SecRule REQUEST_URI|ARGS|ARGS_NAMES \
    "@contains ../" \
    "id:1004,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Path Traversal Attack',\
    severity:'CRITICAL'"

# Rule 1005: Limit API request size (excluding create endpoint)
SecRule REQUEST_HEADERS:Content-Length "@gt 10240" \
    "id:1005,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Request body too large',\
    severity:'WARNING',\
    chain"
SecRule REQUEST_URI "@beginsWith /api/" \
    "chain"
SecRule REQUEST_URI "!@contains /api/inbox/create"

# Rule 1006: Block suspicious user agents (excluding well-known paths)
SecRule REQUEST_HEADERS:User-Agent "@rx (?:bot|crawler|spider|scraper|scan)" \
    "id:1006,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Suspicious user agent',\
    severity:'NOTICE',\
    t:lowercase,\
    chain"
SecRule REQUEST_URI "!@beginsWith /.well-known/"

# Rule 1007: Email enumeration protection
SecRule REQUEST_URI "@rx ^/api/inbox/[a-zA-Z0-9._-]+\.json" \
    "id:1007,\
    phase:2,\
    pass,\
    msg:'Email enumeration attempt',\
    setvar:ip.email_enum_counter=+1,\
    expirevar:ip.email_enum_counter=60"
    
SecRule IP:email_enum_counter "@gt 10" \
    "id:1008,\
    phase:2,\
    deny,\
    status:403,\
    msg:'Email enumeration rate limit exceeded',\
    severity:'WARNING'"

# Rule 1010: Block SQL injection in inbox paths - DIRECT BLOCK
SecRule REQUEST_URI "@rx ^/api/inbox/[^/]*['\";].*\.json" \
    "id:1010,\
    phase:1,\
    deny,\
    status:403,\
    msg:'SQL Injection attempt in inbox path',\
    logdata:'Suspicious characters in inbox name: %{MATCHED_VAR}',\
    severity:'CRITICAL'"

# Rule 1011: Block common SQL keywords in inbox paths - DIRECT BLOCK
SecRule REQUEST_URI "@rx ^/api/inbox/[^/]*(union|select|insert|update|delete|drop|exec|execute|declare|cast|convert).*\.json" \
    "id:1011,\
    phase:1,\
    deny,\
    status:403,\
    msg:'SQL keywords in inbox path',\
    logdata:'SQL keyword found: %{MATCHED_VAR}',\
    severity:'CRITICAL',\
    t:lowercase"

# Rule 1012: Block hex encoding attempts
SecRule REQUEST_URI "@rx ^/api/inbox/.*0x[0-9a-fA-F]+.*\.json" \
    "id:1012,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Hex encoding in inbox path',\
    severity:'WARNING'"

# Rule 1013: Block command injection characters in inbox paths - DIRECT BLOCK
SecRule REQUEST_URI "@rx ^/api/inbox/[^/]*[|;&$`].*\.json" \
    "id:1013,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Command injection characters in inbox path',\
    severity:'CRITICAL'"

# Rule 1014: Block encoded path traversal
SecRule REQUEST_URI "@rx ^/api/inbox/.*(%2e%2e|%252e%252e).*\.json" \
    "id:1014,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Encoded path traversal attempt',\
    severity:'CRITICAL',\
    t:lowercase"

# Rule 1015: Block null bytes and other dangerous characters
SecRule REQUEST_URI "@rx ^/api/inbox/.*(%00|\x00).*\.json" \
    "id:1015,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Null byte injection attempt',\
    severity:'CRITICAL'"

# Rule 1016: Block additional path traversal patterns
SecRule REQUEST_URI "@rx ^/api/inbox/.*(\.\.\/|\.\.\\\\|%2e%2e%2f|%2e%2e%5c)" \
    "id:1016,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Path traversal pattern detected',\
    severity:'CRITICAL',\
    t:lowercase"

# Rule 1017: Block script tag in any part of inbox path (not just .json files)
SecRule REQUEST_URI "@rx ^/api/inbox/.*<script" \
    "id:1017,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Script tag in inbox path',\
    severity:'CRITICAL',\
    t:lowercase"

# ENHANCED PATH TRAVERSAL RULES

# Rule 1020: Block basic path traversal in entire URI
SecRule REQUEST_URI "@contains ../" \
    "id:1020,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Path traversal in URI',\
    severity:'CRITICAL'"

# Rule 1021: Block backslash path traversal
SecRule REQUEST_URI "@contains ..\\" \
    "id:1021,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Backslash path traversal in URI',\
    severity:'CRITICAL'"

# Rule 1022: Block various encoded path traversal patterns
SecRule REQUEST_URI "@rx (?:%2e%2e|%252e%252e|%c0%ae%c0%ae|%uff0e%uff0e)" \
    "id:1022,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Encoded path traversal attempt',\
    severity:'CRITICAL',\
    t:lowercase"

# Rule 1023: Block Unicode path traversal
SecRule REQUEST_URI "@rx (?:\x{2e}\x{2e}|\x{ff0e}\x{ff0e})" \
    "id:1023,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Unicode path traversal attempt',\
    severity:'CRITICAL'"

# Rule 1024: Block directory separator encoding
SecRule REQUEST_URI "@rx (?:%2f|%5c|%c0%af|%c1%9c)" \
    "id:1024,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Encoded directory separator',\
    severity:'WARNING',\
    t:lowercase,\
    chain"
SecRule REQUEST_URI "@rx (?:%2e|%c0%ae|\.)" \
    "t:lowercase"

# Rule 1025: Block double encoding attempts
SecRule REQUEST_URI "@rx %25(?:2e|5c|2f)" \
    "id:1025,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Double encoded path character',\
    severity:'CRITICAL',\
    t:lowercase"

# Rule 1026: Block access to system files
SecRule REQUEST_URI "@rx (?:/etc/passwd|/etc/shadow|/proc/|/sys/|/windows/system32)" \
    "id:1026,\
    phase:1,\
    deny,\
    status:403,\
    msg:'System file access attempt',\
    severity:'CRITICAL',\
    t:lowercase"

# Rule 1027: Comprehensive path traversal detection for API paths
SecRule REQUEST_URI "@beginsWith /api/" \
    "id:1027,\
    phase:1,\
    deny,\
    status:403,\
    msg:'Path traversal in API path',\
    severity:'CRITICAL',\
    chain"
SecRule REQUEST_URI "@rx (?:\.\.+|%2e%2e+|%252e%252e+)" \
    "t:lowercase"
